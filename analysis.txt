Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls   s/call   s/call  name    
 47.43      4.59     4.59 22299554     0.00     0.00  MixColumns
 15.10      6.05     1.46 28399432     0.00     0.00  AddRoundKey
 14.90      7.49     1.44 24599508     0.00     0.00  SubBytes
  9.83      8.44     0.95 24599508     0.00     0.00  ShiftRows
  3.10      8.74     0.30   449991     0.00     0.00  aes_key_setup
  2.07      8.94     0.20  1299974     0.00     0.00  InvMixColumns
  1.86      9.12     0.18  2199956     0.00     0.00  xor_buf
  1.34      9.25     0.13  2299954     0.00     0.00  aes_encrypt
  0.98      9.34     0.10  1399972     0.00     0.00  InvShiftRows
  0.93      9.43     0.09  4949901     0.00     0.00  SubWord
  0.72      9.50     0.07  1399972     0.00     0.00  InvSubBytes
  0.41      9.54     0.04   699986     0.00     0.00  aes_encrypt_ctr
  0.41      9.58     0.04   299994     0.00     0.00  aes_encrypt_cbc_mac
  0.31      9.61     0.03    99998     0.00     0.00  aes_decrypt
  0.21      9.63     0.02    49999     0.00     0.00  aes_ctr_test
  0.10      9.64     0.01   299994     0.00     0.00  ccm_format_assoc_data
  0.10      9.65     0.01   299994     0.00     0.00  ccm_format_payload_data
  0.10      9.66     0.01   299994     0.00     0.00  ccm_prepare_first_format_blk
  0.10      9.67     0.01   149997     0.00     0.00  aes_encrypt_ccm
  0.00      9.67     0.00   499990     0.00     0.00  increment_iv
  0.00      9.67     0.00   349993     0.00     0.00  aes_decrypt_ctr
  0.00      9.67     0.00   299994     0.00     0.00  ccm_prepare_first_ctr_blk
  0.00      9.67     0.00   149997     0.00     0.00  aes_decrypt_ccm
  0.00      9.67     0.00    49999     0.00     0.00  aes_cbc_test
  0.00      9.67     0.00    49999     0.00     0.00  aes_ccm_test
  0.00      9.67     0.00    49999     0.00     0.00  aes_ecb_test
  0.00      9.67     0.00    49999     0.00     0.00  aes_encrypt_cbc
  0.00      9.67     0.00        1     0.00     9.67  aes_test

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.
 
 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this 
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 0.10% of 9.67 seconds

index % time    self  children    called     name
                0.00    9.67       1/1           main [2]
[1]    100.0    0.00    9.67       1         aes_test [1]
                0.00    7.81   49999/49999       aes_ccm_test [4]
                0.00    0.88   49999/49999       aes_ecb_test [14]
                0.02    0.53   49999/49999       aes_ctr_test [15]
                0.00    0.42   49999/49999       aes_cbc_test [17]
-----------------------------------------------
                                                 <spontaneous>
[2]    100.0    0.00    9.67                 main [2]
                0.00    9.67       1/1           aes_test [1]
-----------------------------------------------
                0.01    0.36   99998/2299954     aes_encrypt_cbc [19]
                0.01    0.36   99998/2299954     aes_ecb_test [14]
                0.05    3.27  899982/2299954     aes_encrypt_ctr [9]
                0.07    4.36 1199976/2299954     aes_encrypt_cbc_mac [6]
[3]     87.8    0.13    8.36 2299954         aes_encrypt [3]
                4.59    0.00 22299554/22299554     MixColumns [5]
                1.44    0.00 24599508/24599508     SubBytes [12]
                1.38    0.00 26899462/28399432     AddRoundKey [11]
                0.95    0.00 24599508/24599508     ShiftRows [13]
-----------------------------------------------
                0.00    7.81   49999/49999       aes_test [1]
[4]     80.8    0.00    7.81   49999         aes_ccm_test [4]
                0.01    3.90  149997/149997      aes_encrypt_ccm [7]
                0.00    3.90  149997/149997      aes_decrypt_ccm [8]
-----------------------------------------------
                4.59    0.00 22299554/22299554     aes_encrypt [3]
[5]     47.4    4.59    0.00 22299554         MixColumns [5]
-----------------------------------------------
                0.02    2.26  149997/299994      aes_encrypt_ccm [7]
                0.02    2.26  149997/299994      aes_decrypt_ccm [8]
[6]     47.2    0.04    4.53  299994         aes_encrypt_cbc_mac [6]
                0.07    4.36 1199976/2299954     aes_encrypt [3]
                0.10    0.00 1199976/2199956     xor_buf [21]
-----------------------------------------------
                0.01    3.90  149997/149997      aes_ccm_test [4]
[7]     40.4    0.01    3.90  149997         aes_encrypt_ccm [7]
                0.02    2.26  149997/299994      aes_encrypt_cbc_mac [6]
                0.02    1.46  299994/699986      aes_encrypt_ctr [9]
                0.10    0.03  149997/449991      aes_key_setup [18]
                0.01    0.00  149997/299994      ccm_prepare_first_format_blk [27]
                0.01    0.00  149997/299994      ccm_format_assoc_data [25]
                0.01    0.00  149997/299994      ccm_format_payload_data [26]
                0.00    0.00  149997/299994      ccm_prepare_first_ctr_blk [29]
                0.00    0.00  149997/499990      increment_iv [28]
-----------------------------------------------
                0.00    3.90  149997/149997      aes_ccm_test [4]
[8]     40.3    0.00    3.90  149997         aes_decrypt_ccm [8]
                0.02    2.26  149997/299994      aes_encrypt_cbc_mac [6]
                0.00    1.47  299994/349993      aes_decrypt_ctr [10]
                0.10    0.03  149997/449991      aes_key_setup [18]
                0.01    0.00  149997/299994      ccm_prepare_first_format_blk [27]
                0.01    0.00  149997/299994      ccm_format_assoc_data [25]
                0.01    0.00  149997/299994      ccm_format_payload_data [26]
                0.00    0.00  149997/299994      ccm_prepare_first_ctr_blk [29]
                0.00    0.00  149997/499990      increment_iv [28]
-----------------------------------------------
                0.00    0.24   49999/699986      aes_ctr_test [15]
                0.02    1.46  299994/699986      aes_encrypt_ccm [7]
                0.02    1.70  349993/699986      aes_decrypt_ctr [10]
[9]     35.5    0.04    3.40  699986         aes_encrypt_ctr [9]
                0.05    3.27  899982/2299954     aes_encrypt [3]
                0.07    0.00  899982/2199956     xor_buf [21]
                0.00    0.00  199996/499990      increment_iv [28]
-----------------------------------------------
                0.00    0.25   49999/349993      aes_ctr_test [15]
                0.00    1.47  299994/349993      aes_decrypt_ccm [8]
[10]    17.8    0.00    1.72  349993         aes_decrypt_ctr [10]
                0.02    1.70  349993/699986      aes_encrypt_ctr [9]
-----------------------------------------------
                0.08    0.00 1499970/28399432     aes_decrypt [16]
                1.38    0.00 26899462/28399432     aes_encrypt [3]
[11]    15.1    1.46    0.00 28399432         AddRoundKey [11]
-----------------------------------------------
                1.44    0.00 24599508/24599508     aes_encrypt [3]
[12]    14.9    1.44    0.00 24599508         SubBytes [12]
-----------------------------------------------
                0.95    0.00 24599508/24599508     aes_encrypt [3]
[13]     9.8    0.95    0.00 24599508         ShiftRows [13]
-----------------------------------------------
                0.00    0.88   49999/49999       aes_test [1]
[14]     9.1    0.00    0.88   49999         aes_ecb_test [14]
                0.03    0.44   99998/99998       aes_decrypt [16]
                0.01    0.36   99998/2299954     aes_encrypt [3]
                0.03    0.01   49999/449991      aes_key_setup [18]
-----------------------------------------------
                0.02    0.53   49999/49999       aes_test [1]
[15]     5.7    0.02    0.53   49999         aes_ctr_test [15]
                0.00    0.24   49999/699986      aes_encrypt_ctr [9]
                0.00    0.25   49999/349993      aes_decrypt_ctr [10]
                0.03    0.01   49999/449991      aes_key_setup [18]
-----------------------------------------------
                0.03    0.44   99998/99998       aes_ecb_test [14]
[16]     4.9    0.03    0.44   99998         aes_decrypt [16]
                0.20    0.00 1299974/1299974     InvMixColumns [20]
                0.10    0.00 1399972/1399972     InvShiftRows [22]
                0.08    0.00 1499970/28399432     AddRoundKey [11]
                0.07    0.00 1399972/1399972     InvSubBytes [24]
-----------------------------------------------
                0.00    0.42   49999/49999       aes_test [1]
[17]     4.3    0.00    0.42   49999         aes_cbc_test [17]
                0.00    0.38   49999/49999       aes_encrypt_cbc [19]
                0.03    0.01   49999/449991      aes_key_setup [18]
-----------------------------------------------
                0.03    0.01   49999/449991      aes_ecb_test [14]
                0.03    0.01   49999/449991      aes_cbc_test [17]
                0.03    0.01   49999/449991      aes_ctr_test [15]
                0.10    0.03  149997/449991      aes_encrypt_ccm [7]
                0.10    0.03  149997/449991      aes_decrypt_ccm [8]
[18]     4.0    0.30    0.09  449991         aes_key_setup [18]
                0.09    0.00 4949901/4949901     SubWord [23]
-----------------------------------------------
                0.00    0.38   49999/49999       aes_cbc_test [17]
[19]     3.9    0.00    0.38   49999         aes_encrypt_cbc [19]
                0.01    0.36   99998/2299954     aes_encrypt [3]
                0.01    0.00   99998/2199956     xor_buf [21]
-----------------------------------------------
                0.20    0.00 1299974/1299974     aes_decrypt [16]
[20]     2.1    0.20    0.00 1299974         InvMixColumns [20]
-----------------------------------------------
                0.01    0.00   99998/2199956     aes_encrypt_cbc [19]
                0.07    0.00  899982/2199956     aes_encrypt_ctr [9]
                0.10    0.00 1199976/2199956     aes_encrypt_cbc_mac [6]
[21]     1.9    0.18    0.00 2199956         xor_buf [21]
-----------------------------------------------
                0.10    0.00 1399972/1399972     aes_decrypt [16]
[22]     1.0    0.10    0.00 1399972         InvShiftRows [22]
-----------------------------------------------
                0.09    0.00 4949901/4949901     aes_key_setup [18]
[23]     0.9    0.09    0.00 4949901         SubWord [23]
-----------------------------------------------
                0.07    0.00 1399972/1399972     aes_decrypt [16]
[24]     0.7    0.07    0.00 1399972         InvSubBytes [24]
-----------------------------------------------
                0.01    0.00  149997/299994      aes_encrypt_ccm [7]
                0.01    0.00  149997/299994      aes_decrypt_ccm [8]
[25]     0.1    0.01    0.00  299994         ccm_format_assoc_data [25]
-----------------------------------------------
                0.01    0.00  149997/299994      aes_encrypt_ccm [7]
                0.01    0.00  149997/299994      aes_decrypt_ccm [8]
[26]     0.1    0.01    0.00  299994         ccm_format_payload_data [26]
-----------------------------------------------
                0.01    0.00  149997/299994      aes_encrypt_ccm [7]
                0.01    0.00  149997/299994      aes_decrypt_ccm [8]
[27]     0.1    0.01    0.00  299994         ccm_prepare_first_format_blk [27]
-----------------------------------------------
                0.00    0.00  149997/499990      aes_encrypt_ccm [7]
                0.00    0.00  149997/499990      aes_decrypt_ccm [8]
                0.00    0.00  199996/499990      aes_encrypt_ctr [9]
[28]     0.0    0.00    0.00  499990         increment_iv [28]
-----------------------------------------------
                0.00    0.00  149997/299994      aes_encrypt_ccm [7]
                0.00    0.00  149997/299994      aes_decrypt_ccm [8]
[29]     0.0    0.00    0.00  299994         ccm_prepare_first_ctr_blk [29]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.


Index by function name

  [11] AddRoundKey            [15] aes_ctr_test           [18] aes_key_setup
  [20] InvMixColumns          [16] aes_decrypt             [1] aes_test
  [22] InvShiftRows            [8] aes_decrypt_ccm        [25] ccm_format_assoc_data
  [24] InvSubBytes            [10] aes_decrypt_ctr        [26] ccm_format_payload_data
   [5] MixColumns             [14] aes_ecb_test           [29] ccm_prepare_first_ctr_blk
  [13] ShiftRows               [3] aes_encrypt            [27] ccm_prepare_first_format_blk
  [12] SubBytes               [19] aes_encrypt_cbc        [28] increment_iv
  [23] SubWord                 [6] aes_encrypt_cbc_mac    [21] xor_buf
  [17] aes_cbc_test            [7] aes_encrypt_ccm
   [4] aes_ccm_test            [9] aes_encrypt_ctr
